// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Inc16.hdl

/**
 * 16-bit incrementer:
 * out = in + 1 (arithmetic addition)
 */

// Take an half adder for the right bit, and "connect" it's input a to the right bit of in and input b to a static 1. So what will this half adder do?
// It will "flip" the right most bit of the input and output this result at out.
// If it has encountered a 0 at in, it will output 0 as carry.
// If it has encountered a 1 at in, it will output 1 as carry.
// Now take a second half adder for the left input bit, connect the a input to the left bit of in and the b input to the carry of the last half adder.
// So now, this half adder will only flip the left bit if it gets a 1 at the b input - and this happens only if the right half adder has encountered a 1 as input, and not a 0.
// This second half adder can only output a 1 as carry (making a following half adder flip its bit, if we had more bits in our number) if it has encountered a 1 at the left bit of in (not a 0) and if the carry of the last half adder is 1, so if there was no 0 before.
// You see where this is going? We stop flipping bits the moment we encounter a zero, becaus all subsequent carrys will be zero. We could continue this way for numbers with n bits, n beeing an arbitrary number.

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
    // Put you code here:
    HalfAdder(a=in[0],  b=true, sum=out[0],  carry=c0 );
    HalfAdder(a=in[1],  b=c0,   sum=out[1],  carry=c1 );
    HalfAdder(a=in[2],  b=c1,   sum=out[2],  carry=c2 );
    HalfAdder(a=in[3],  b=c2,   sum=out[3],  carry=c3 );
    HalfAdder(a=in[4],  b=c3,   sum=out[4],  carry=c4 );
    HalfAdder(a=in[5],  b=c4,   sum=out[5],  carry=c5 );
    HalfAdder(a=in[6],  b=c5,   sum=out[6],  carry=c6 );
    HalfAdder(a=in[7],  b=c6,   sum=out[7],  carry=c7 );
    HalfAdder(a=in[8],  b=c7,   sum=out[8],  carry=c8 );
    HalfAdder(a=in[9],  b=c8,   sum=out[9],  carry=c9 );
    HalfAdder(a=in[10], b=c9,   sum=out[10], carry=c10);
    HalfAdder(a=in[11], b=c10,  sum=out[11], carry=c11);
    HalfAdder(a=in[12], b=c11,  sum=out[12], carry=c12);
    HalfAdder(a=in[13], b=c12,  sum=out[13], carry=c13);
    HalfAdder(a=in[14], b=c13,  sum=out[14], carry=c14);
    HalfAdder(a=in[15], b=c14,  sum=out[15], carry=ignored);
}